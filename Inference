import grpc
from concurrent import futures
import inference_pb2
import inference_pb2_grpc
import psycopg2

class InferenceServicer(inference_pb2_grpc.InferenceServicer):
    def Compute(self, request, context):
        numbers = request.numbers
        result_sum = sum(numbers)
        result_diff = sum([-n for n in numbers])
        result_mult = 1
        for n in numbers:
            result_mult *= n

        conn = psycopg2.connect("dbname=test user=postgres password=pass")
        cur = conn.cursor()
        cur.execute("INSERT INTO results (sum, diff, mult) VALUES (%s, %s, %s)", 
                    (result_sum, result_diff, result_mult))
        conn.commit()
        cur.close()
        conn.close()

        return inference_pb2.DataResponse(sum=result_sum, diff=result_diff, mult=result_mult)

server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))
inference_pb2_grpc.add_InferenceServicer_to_server(InferenceServicer(), server)
server.add_insecure_port('[::]:50051')
server.start()
server.wait_for_termination()
